type Block @entity {
    id: ID!
    number: Int! @index
    timestamp: DateTime! @index
}

type Transaction @entity {
    id: ID!
    blockNumber: Int @index
    blockTimestamp: DateTime! @index
    hash: String! @index
    to: String @index
    from: String @index
    status: Int @index
}

type ContractEventRentalStarted @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    eventName: String! @index
    seaportOrderHash: String! @index
    renterWallet: String! @index
    lender: String! @index
    collection: String!
    tokenId: BigInt!
    fulfiller: String!
    rentEndTimestamp: BigInt!
}

type ContractEventRentalStopped @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    eventName: String! @index
    seaportOrderHash: String! @index
    renterWallet: String! @index
    lender: String! @index
    collection: String!
    tokenId: BigInt!
    stopper: String!
}

type ContractFunctionRentFromZone @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    payload: JSON!
    seaportOrderHash: String!
    seaportZoneHash: String!
    offer: JSON!
    consideration: JSON!
    seaportFulfiller: String!
    offerer: String!
    signature: String!
}

type ContractFunctionSetZone @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    newZone: String!
}

